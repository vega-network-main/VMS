<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e16d75cb-2dbe-489d-9eb6-fc688212fe1a" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/main/java/org/veganetwork/server/game/PacketListenerSystem.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/veganetwork/server/game/utilitaires/MineTerminal.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/veganetwork/server/RunServer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/veganetwork/server/RunServer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/veganetwork/server/game/commands/GamemodeCommand.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/veganetwork/server/game/commands/GamemodeCommand.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 7
}]]></component>
  <component name="ProjectId" id="2atvcNGzfsuCXB9E673nIJ9Vq47" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "master",
    "last_opened_file_path": "D:/Projects/Java/VMS/gradle",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "settings.editor.selected.configurable": "reference.settingsdialog.project.gradle",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Gradle.VMS [build]">
    <configuration name="VMS [build]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="build" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="VMS [init]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="init" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.VMS [build]" />
        <item itemvalue="Gradle.VMS [init]" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e16d75cb-2dbe-489d-9eb6-fc688212fe1a" name="Changes" comment="" />
      <created>1705150771068</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1705150771068</updated>
      <workItem from="1705150773277" duration="773000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="com.github.evgenys91.machinet.common.dslhistory.DslHistoryState">
    <option name="historyDtoById">
      <map>
        <entry key="5995cd">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/src/main/java/org/veganetwork/server/game/utilitaires/MineTerminal.java" />
                </list>
              </option>
              <option name="id" value="5995cd" />
              <option name="initiateTms" value="1705146655517" />
              <option name="request" value="How to fix the following error:&#10;Non-static method 'readLine(java.lang.String)' cannot be referenced from a static context" />
              <option name="response" value="" />
              <option name="responseDescription" value="The error message &quot;Non-static method 'readLine(java.lang.String)' cannot be referenced from a static context&quot; occurs because you are trying to invoke a non-static method `readLine()` from a static context. In your case, the `readLine()` method is being called from a static method `startTerminalThread()`.&#10;&#10;To fix this error, you have a couple of options:&#10;&#10;Option 1: Make the `readLine()` method static&#10;You can make the `readLine()` method static by modifying the `LineReader` class. However, since you don't have control over the `LineReader` class, this option is not feasible in your case.&#10;&#10;Option 2: Create an instance of the `LineReader` class&#10;Since the `readLine()` method is an instance method, you need to create an instance of the `LineReader` class to invoke it. Here's how you can modify your code to fix the error:&#10;&#10;```java&#10;public static void startTerminalThread() {&#10;    final Thread thread = new Thread(null, () -&gt; {&#10;        try {&#10;            terminal = TerminalBuilder.builder().system(true).dumb(true).encoding(&quot;UTF-8&quot;).name(&quot;VMS Console&quot;).build();&#10;        } catch (IOException IOE) {&#10;            throw new RuntimeException(IOE);&#10;        }&#10;        lineReader = LineReaderBuilder.builder().terminal(terminal).build();&#10;        run = true;&#10;        while (run) {&#10;            String input;&#10;            try {&#10;                input = lineReader.readLine(PREFIX); // Use the instance of LineReader to invoke readLine()&#10;            } catch (UserInterruptException exception) {&#10;                System.exit(0);&#10;                return;&#10;            }&#10;        }&#10;    }, &quot;VMS-Console.Service&quot;);&#10;    thread.setDaemon(true);&#10;    thread.start();&#10;}&#10;```&#10;&#10;By creating an instance of the `LineReader` class (`lineReader = LineReaderBuilder.builder().terminal(terminal).build();`), you can then invoke the `readLine()` method using that instance (`input = lineReader.readLine(PREFIX);`).&#10;&#10;I hope this helps! Let me know if you have any further questions." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1705146660248" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/src/main/java/org/veganetwork/server/game/utilitaires/MineTerminal.java" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="632981">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/src/main/java/org/veganetwork/server/game/utilitaires/MineTerminal.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/veganetwork/Main.java" />
                </list>
              </option>
              <option name="id" value="632981" />
              <option name="initiateTms" value="1705147152994" />
              <option name="request" value="[13:56:59 INFO] [main]:&#10;[13:56:59 INFO] [main]: -- DEBUG INFO  --&#10;[13:56:59 INFO] [main]: Java: 17.0.9+8-LTS&#10;[13:56:59 INFO] [main]: Supported protocol: 763 (1.20.1)&#10;[13:56:59 INFO] [main]: -- END DEBUG   --&#10;[13:56:59 INFO] [main]:&#10;[13:56:59 INFO] [main]: Initializing VCS&#10;[13:57:00 INFO] [main]: Using MOJANG server mode.&#10;[Server Console]: [13:57:00 INFO] [main]: Starting VMCS server.&#10;[13:57:00 INFO] [main]: VMCS server started successfully.&#10;[13:57:00 INFO] [main]: VMCS has started, IP: 0.0.0.0, port: 26000&#10;ccc&#10;[Server Console]: c&#10;[Server Console]: yer&#10;[Server Console]: s&#10;[Server Console]: [13:58:11 INFO] [ForkJoinPool.commonPool-worker-2]: UUID of player vovamod is 3cbaa019-5974-4001-a0e6-5cec63d806e0&#10;&#10;&#10;could you add an integration to tiny log?" />
              <option name="response" value="" />
              <option name="responseDescription" value="Certainly! To integrate Tinylog into your code, you need to follow these steps:&#10;&#10;Step 1: Add Tinylog Dependency&#10;First, you need to add the Tinylog dependency to your project. You can do this by adding the following Maven dependency to your `pom.xml` file:&#10;&#10;```xml&#10;&lt;dependency&gt;&#10;    &lt;groupId&gt;org.tinylog&lt;/groupId&gt;&#10;    &lt;artifactId&gt;tinylog-api&lt;/artifactId&gt;&#10;    &lt;version&gt;2.2.1&lt;/version&gt;&#10;&lt;/dependency&gt;&#10;```&#10;&#10;Step 2: Configure Tinylog&#10;Next, you need to configure Tinylog to use the desired logging output. You can create a `tinylog.properties` file in your project's resources directory with the following content:&#10;&#10;```properties&#10;writer = file&#10;writer.filename = logs/application.log&#10;writer.format = {date: HH:mm:ss} [{thread}] {message}&#10;```&#10;&#10;This configuration will write log messages to a file named `application.log` in the `logs` directory of your project.&#10;&#10;Step 3: Update Logging Statements&#10;Now, you can update your logging statements to use Tinylog. Replace the existing `MinecraftServer.LOGGER.info()` statements with the following code:&#10;&#10;```java&#10;import org.tinylog.Logger;&#10;&#10;// ...&#10;&#10;Logger.info(&quot;Initializing VCS&quot;);&#10;```&#10;&#10;Step 4: Start Logging&#10;To start logging with Tinylog, you need to initialize it at the beginning of your `main()` method. Add the following line of code:&#10;&#10;```java&#10;import org.tinylog.Configurator;&#10;&#10;// ...&#10;&#10;public static void main(String[] args) {&#10;    Configurator.defaultConfig().activate();&#10;    &#10;    // ...&#10;}&#10;```&#10;&#10;This will activate the default Tinylog configuration and start logging according to the `tinylog.properties` file.&#10;&#10;That's it! With these steps, you have integrated Tinylog into your code, and it will start logging messages to the specified file. You can customize the logging configuration further by referring to the Tinylog documentation.&#10;&#10;Let me know if you need any further assistance!" />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1705147158650" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/src/main/java/org/veganetwork/server/game/utilitaires/MineTerminal.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/veganetwork/Main.java" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="9592e5">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/src/main/java/org/veganetwork/server/game/utilitaires/MineTerminal.java" />
                </list>
              </option>
              <option name="id" value="9592e5" />
              <option name="initiateTms" value="1705147178846" />
              <option name="request" value="because Server Console is not in the logger" />
              <option name="response" value="" />
              <option name="responseDescription" value="Apologies for the confusion. If you want to redirect the output from the &quot;Server Console&quot; to Tinylog, you can create a custom `OutputStream` that writes to the Tinylog logger. Here's how you can modify your code to achieve this:&#10;&#10;Step 1: Create a Custom OutputStream&#10;Create a class that extends `OutputStream` and overrides the `write()` method to redirect the output to Tinylog. Here's an example implementation:&#10;&#10;```java&#10;import org.tinylog.Logger;&#10;&#10;import java.io.IOException;&#10;import java.io.OutputStream;&#10;&#10;public class TinylogOutputStream extends OutputStream {&#10;    private StringBuilder buffer = new StringBuilder();&#10;&#10;    @Override&#10;    public void write(int b) throws IOException {&#10;        if (b == '\n') {&#10;            Logger.info(&quot;[Server Console]: &quot; + buffer.toString());&#10;            buffer.setLength(0);&#10;        } else {&#10;            buffer.append((char) b);&#10;        }&#10;    }&#10;}&#10;```&#10;&#10;This class captures the output from the &quot;Server Console&quot; and logs it using Tinylog.&#10;&#10;Step 2: Update the Terminal Configuration&#10;Modify the `startTerminalThread()` method to redirect the output from the &quot;Server Console&quot; to the custom `OutputStream`. Here's the updated code:&#10;&#10;```java&#10;import java.io.IOException;&#10;import java.io.PrintStream;&#10;&#10;public class MineTerminal {&#10;    // ...&#10;&#10;    public static void startTerminalThread() {&#10;        final Thread thread = new Thread(null, () -&gt; {&#10;            try {&#10;                terminal = TerminalBuilder.builder().system(true).dumb(true).encoding(&quot;UTF-8&quot;).name(&quot;VMS Console&quot;).build();&#10;            } catch (IOException IOE) {&#10;                throw new RuntimeException(IOE);&#10;            }&#10;            lineReader = LineReaderBuilder.builder().terminal(terminal).build();&#10;            run = true;&#10;&#10;            // Redirect the output from System.out to the custom OutputStream&#10;            PrintStream originalOut = System.out;&#10;            System.setOut(new PrintStream(new TinylogOutputStream()));&#10;&#10;            while (run) {&#10;                String input;&#10;                try {&#10;                    input = lineReader.readLine(PREFIX);&#10;                    MinecraftServer.getCommandManager().execute(MinecraftServer.getCommandManager().getConsoleSender(), input);&#10;                } catch (EndOfFileException exception) {&#10;                    return;&#10;                } catch (UserInterruptException exception) {&#10;                    System.exit(0);&#10;                    return;&#10;                }&#10;            }&#10;&#10;            // Restore the original System.out&#10;            System.setOut(originalOut);&#10;        }, &quot;VMS-Console.Service&quot;);&#10;        thread.setDaemon(true);&#10;        thread.start();&#10;    }&#10;&#10;    // ...&#10;}&#10;```&#10;&#10;This code redirects the output from `System.out` to the custom `OutputStream` (`TinylogOutputStream`) that logs the messages using Tinylog. It also restores the original `System.out` after the terminal thread finishes.&#10;&#10;With these modifications, the output from the &quot;Server Console&quot; will be logged using Tinylog. Make sure you have followed the previous steps to configure Tinylog properly.&#10;&#10;Let me know if you have any further questions!" />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1705147185947" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/src/main/java/org/veganetwork/server/game/utilitaires/MineTerminal.java" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>